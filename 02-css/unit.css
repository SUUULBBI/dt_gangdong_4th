html {
    font-size: 20px;
}

.box {
    margin-botton: 100px;
}

/* CSS 단위  */

/* 
    #1. 절대단위 (Absoklute Units)
        - 절대단위는 특정한 물리적 길이를 나타내며, 일반적으로 고정된 크기를 의미함.
        - 주로 인쇄 매체에서 사용함. 
        ex. 픽셀(px) / 포인트(pt) / 인치(inch) / 센티미터(cm) 등등..
*/

/* px 단위 */
/* - 한 화면의 픽셀 하나에 해당 */

.px {
    width: 100px;
    height: 100px;
    background-color: gold;
}

/* 
    #2. 상대 단위 (Realtive Units)
    - 상대단위는 다른 길이 값에 상대적인 크기를 지정해줌. 
    - "반응형" 디자인에서 매우 유용함. 
    ex. 백분율(%)/ em / rem / 뷰포트 너비 ( vx) / 뷰포트 높이 (vh) 등등..
*/

/* 
    %단위
    - 상위 요소의 상대적인 크기. (부모 요소 영향받음.)
 */

/* 만약 부모요소에 %로 상대단위를 쓴다고 하면 뷰포트에 대한 상대값이 적용됨. */
.pct-parent {
    width: 300px;
    height: 300px;
    background-color: plum;
}

.pct-child {
    width: 60%;
    height: 60%;
    background-color: palegreen;
}

/* 
    em
    - font-size 속성값에 비례해서 결정되는 상대 단위.
    - 상위 요소 크기에 비례
    - em 단위는 "중첩!"일 때만 사용됨 / 대체로 굳이 필요한 상황이 아니라면 자주 사용되지는 않음. 
    - 3em을 사용하더라도 상황에 따라 그 크기가 다르기 때문*/
.em {
    font-size: 2em;
}

.case1 {
    font-size: 20px;
}

.case2 {
    font-size: 10px;
}

.em-3 {
    font-size: 3em;
}

/* 
    rem
    - root em 약자
    - 최상위 요소(=html) 글꼴 크기에 비례함.(모든 rem은 뿌리대비해서만 영향 받음)
    - 2rem이든, 3rem이든 다 같은 크기임. (즉, 중첩 영향을 받지 않음으로 em 보다 사용을 많이함.)  */
.rem {
    font-size: 2rem;
}

/* 
    CSS 요소인, [ CSS 변수 ]
    - 변수 이름 : "--" 로 시작
    * 사용하는 이유 : 
        1) 여기저기 동일한 색상이나 동일한 속성의 것에 적용된 것을 한꺼번에 수정하기 쉬워짐(유지보수성을 위함). / 효율성도 좋음.
        2) 통일성 주기 좋음. 
    * 사용법
    - "var(변수명)" --> var() 함수 사용.
     * 변수명은 직접 지정해주면 됨. 내가 커스텀한 css 네이밍.

*/

/* 전역변수 - root / html / * / root  */
:root {
    /* :body {} */ /* :html {} */ /* :* {} */
    /* root or * or body = (전체영역, 전영역) 전역 변수 / 전영역에 변수가 적용됨. */
    --color-success: green;
    --color-error: red;
    --color-white: white;

    --color-red-1: rgb(249, 42, 42);
    --color-red-2: rgb(251, 72, 72);
}

.btn {
    /* 지역 변수 : 해당 지역/요소에만 변수가 적용됨. 사용예시는 아래와 같음 */
    --size: 8px;

    color: var(--color-white);
    border: none;
    border-radius: 4px;
    font-weight: bold;
    padding: var(--size);
    width: 100px;
}
.btn.success {
    background-color: var(--color-success);
}

.btn.error {
    background-color: var(--color-error);
}
